!function(){"use strict";angular.module("app",["applicat.push.service","ionic","ngCordova","ngResource","ngTemplates","permission","ui.bootstrap.tpls","ui.bootstrap.datepicker"]).run(["$ionicPlatform","$rootScope","$stateParams","$state","AuthService","Permission","$window","PushService",function($ionicPlatform,$rootScope,$stateParams,$state,AuthService,Permission,$window,PushService){AuthService.init(),Permission.defineRole("user",function(){var user=AuthService.getUser();return user?!0:!1}),$ionicPlatform.ready(function(){$window.cordova&&$window.cordova.plugins.Keyboard&&($window.cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),PushService.registerDevice()),$window.StatusBar&&$window.StatusBar.styleDefault()}),$state.go("main.home")}]).config(["$stateProvider","$httpProvider",function($stateProvider,$httpProvider){$httpProvider.interceptors.push("AuthInterceptor"),$stateProvider.state("login",{url:"/login",templateUrl:"state/login/login.html",controller:"LoginController as Login"}).state("main",{"abstract":!0,url:"/main",templateUrl:"state/main/main.html",controller:"MainController as Main"}).state("main.home",{url:"/home",views:{main:{templateUrl:"state/mainHome/mainHome.html",controller:"MainHomeController as Home"}},data:{permissions:{only:["user"],redirectTo:{otherwise:{state:"login"}}}}}).state("main.daumMap",{url:"/daumMap/:from",views:{main:{templateUrl:"state/daumMap/daumMap.html",controller:"DaumMapController as Map"}},data:{permissions:{only:["user"],redirectTo:{otherwise:{state:"login"}}}}}).state("main.detail",{url:"/detail/:id",views:{main:{templateUrl:"state/detail/detail.html",controller:"DetailController as Detail"}},data:{permissions:{only:["user"],redirectTo:{otherwise:{state:"login"}}}}}).state("main.schedule",{url:"/schdule/:id/:selectedDate",views:{main:{templateUrl:"state/schedule/schedule.html",controller:"ScheduleController as Schedule"}},data:{permissions:{only:["user"],redirectTo:{otherwise:{state:"login"}}}}}).state("main.balance",{url:"/balance","abstract":!0,views:{main:{templateUrl:"state/balance/balance.html",controller:"BalanceController as Balance"}}}).state("main.balance.list",{url:"/list",views:{balance:{templateUrl:"state/balance/list/balanceList.html",controller:"BalanceListController as BalanceList"}},data:{permissions:{only:["user"],redirectTo:{otherwise:{state:"login"}}}}}).state("main.balance.detail",{url:"/detail/:placeName/:points",views:{balance:{templateUrl:"state/balance/detail/balanceDetail.html",controller:"BalanceDetailController as BalanceDetail"}},data:{permissions:{only:["user"],redirectTo:{otherwise:{state:"login"}}}}}).state("main.cancel",{url:"/cancel",views:{main:{templateUrl:"state/cancel/cancel.html",controller:"CancelController as Cancel"}},data:{permissions:{only:["user"],redirectTo:{otherwise:{state:"login"}}}}}).state("main.favorite",{url:"/favorite",views:{main:{templateUrl:"state/favorite/favorite.html",controller:"FavoriteController as Favorite"}},data:{permissions:{only:["user"],redirectTo:{otherwise:{state:"login"}}}}}).state("main.show",{url:"/show","abstract":!0,views:{main:{templateUrl:"state/show/show.html",controller:"ShowController as Show"}}}).state("main.show.list",{url:"/list",views:{show:{templateUrl:"state/show/list/showList.html",controller:"ShowListController as ShowList"}},data:{permissions:{only:["user"],redirectTo:{otherwise:{state:"login"}}}}}).state("main.show.savedList",{url:"/savedList",views:{show:{templateUrl:"state/show/savedShow/savedShowList.html",controller:"SavedShowListController as SavedShowList"}},data:{permissions:{only:["user"],redirectTo:{otherwise:{state:"login"}}}}}).state("main.show.detail",{url:"/detail/:id",views:{show:{templateUrl:"state/show/detail/showDetail.html",controller:"ShowDetailController as ShowDetail"}},data:{permissions:{only:["user"],redirectTo:{otherwise:{state:"login"}}}}}).state("main.announcements",{"abstract":!0,url:"/announcements",views:{main:{templateUrl:"state/announcements/announcements.html",controller:"AnnouncementsController as Announcements"}}}).state("main.announcements.eventList",{url:"/eventList",views:{announcements:{templateUrl:"state/announcements/event/eventList.html",controller:"EventListController as EventList"}},data:{permissions:{only:["user"],redirectTo:{otherwise:{state:"login"}}}}}).state("main.announcements.eventDetail",{url:"/eventDetail/:id",views:{announcements:{templateUrl:"state/announcements/event/eventDetail.html",controller:"EventDetailController as EventDetail"}},data:{permissions:{only:["user"],redirectTo:{otherwise:{state:"login"}}}}}).state("main.announcements.noticeList",{url:"/noticeList",views:{announcements:{templateUrl:"state/announcements/notice/noticeList.html",controller:"NoticeListController as NoticeList"}},data:{permissions:{only:["user"],redirectTo:{otherwise:{state:"login"}}}}}).state("main.announcements.noticeDetail",{url:"/noticeDetail/:id",views:{announcements:{templateUrl:"state/announcements/notice/noticeDetail.html",controller:"NoticeDetailController as NoticeDetail"}},data:{permissions:{only:["user"],redirectTo:{otherwise:{state:"login"}}}}})}])}(),function(){"use strict";angular.module("app").constant("governorUrl","http://todaynail.applicat.co.kr").constant("appName","todayNail").constant("kakaoKey","42022d8578d6fb558d70ae75766ee900").constant("facebookKey","983668071678162").constant("googlePushSenderID","282095615414")}(),function(){"use strict";function Bookings($resource,governorUrl,$cordovaFileTransfer){var bookingUrl=governorUrl+"/booking/:list/:image/:mine/:dateBetween/:request",params={list:"@list",image:"@image",mine:"@mine",dateBetween:"@dateBetween"},actions={getBookings:{method:"GET",params:{list:"list"}},getMyBookings:{method:"GET",params:{list:"list",mine:"mine"}},getBookingsDateBetween:{method:"GET",params:{dateBetween:"dateBetween"}},findById:{method:"GET"},createBooking:{method:"POST"},requestBooking:{method:"POST",params:{request:"request"}},updateBooking:{method:"PUT",isArray:!0,headers:{"Content-Type":"text/plain"}},removeBooking:{method:"DELETE"}},service=$resource(bookingUrl,params,actions);return service.createBookingWithImage=function(parameters,booking){angular.extend(booking,parameters);var filePath=booking.file;delete booking.file;var options={params:booking,chunkedMode:!1};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/booking/image",filePath,options)}},service.updateBookingWithImage=function(parameters,booking){angular.extend(booking,parameters);var filePath=booking.file;delete booking.file;var options={params:booking,chunkedMode:!1,httpMethod:"PUT"};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/booking/image",filePath,options)}},service}angular.module("app").factory("Bookings",Bookings),Bookings.$inject=["$resource","governorUrl","$cordovaFileTransfer"]}(),function(){"use strict";function Comments($resource,governorUrl){var commentUrl=governorUrl+"/post/comment",params={},actions={addCommentToPost:{method:"POST"}},service=$resource(commentUrl,params,actions);return service}angular.module("app").factory("Comments",Comments),Comments.$inject=["$resource","governorUrl"]}(),function(){"use strict";function Devices($resource,governorUrl,PushService){var deviceUrl=governorUrl+"/device/:sendMessageAll",params={sendMessageAll:"@sendMessageAll"},actions={pushAll:{method:"GET",params:{sendMessageAll:"sendMessageAll"}},register:{method:"POST"},update:{method:"PUT"}},service=$resource(deviceUrl,params,actions);return service.getDeviceIdSync=function(){var deviceId=PushService.getDeviceId();return deviceId},service}angular.module("app").factory("Devices",Devices),Devices.$inject=["$resource","governorUrl","PushService"]}(),function(){"use strict";function Likes($resource,governorUrl){var likesUrl=governorUrl+"/post/:like/:unlike",params={like:"@like",unlike:"@unlike"},actions={likePost:{method:"POST"},unlikePost:{method:"DELETE"}},service=$resource(likesUrl,params,actions);return service}angular.module("app").factory("Likes",Likes),Likes.$inject=["$resource","governorUrl"]}(),function(){"use strict";function Photos($resource,governorUrl,AuthService,$cordovaFileTransfer){var photosUrl=governorUrl+"/photo",params={},actions={removePhoto:{method:"DELETE"}},service=$resource(photosUrl,params,actions);return service.uploadPhoto=function(parameters,post){angular.extend(post,parameters);var filePath=post.file?post.file:"[]";delete post.file;var options={params:post,chunkedMode:!1,headers:{Connection:"close",Authorization:"Bearer "+AuthService.getToken()}};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/photo",filePath,options,!0)}},service}angular.module("app").factory("Photos",Photos),Photos.$inject=["$resource","governorUrl","AuthService","$cordovaFileTransfer"]}(),function(){"use strict";function Places($resource,governorUrl,$cordovaFileTransfer){var placeUrl=governorUrl+"/place/:list/:mine/:within/:image:photos",params={list:"@list",mine:"@mine",within:"@within",image:"@image",photos:"@photos"},actions={getPlaces:{method:"GET",params:{list:"list"}},getMyPlaces:{method:"GET",params:{list:"list",mine:"mine"}},getPlacesWithin:{method:"GET",params:{list:"list",within:"within"}},getPlacePhotos:{method:"GET",params:{photos:"photos"},isArray:!0},findById:{method:"GET"},createPlace:{method:"POST"},createPlaceWithImage:{method:"POST",params:{image:"image"}},updatePlace:{method:"PUT"},updatePlaceWithImage:{method:"PUT",params:{image:"image"}},removePlace:{method:"DELETE"}},service=$resource(placeUrl,params,actions);return service.createPlaceWithImage=function(parameters,place){angular.extend(place,parameters);var filePath=place.file;delete place.file;var options={params:place,chunkedMode:!1};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/place/image",filePath,options)}},service.updatePlaceWithImage=function(parameters,place){angular.extend(place,parameters);var filePath=place.file;delete place.file;var options={params:place,chunkedMode:!1,httpMethod:"PUT"};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/place/image",filePath,options)}},service}angular.module("app").factory("Places",Places),Places.$inject=["$resource","governorUrl","$cordovaFileTransfer"]}(),function(){"use strict";function Posts($resource,governorUrl,$cordovaFileTransfer,AuthService){var postUrl=governorUrl+"/post/:list/:image/:mine/:like",params={list:"@list",image:"@image",mine:"@mine",like:"@like"},actions={getPosts:{method:"GET",params:{list:"list"}},getMyPosts:{method:"GET",params:{list:"list",mine:"mine"}},findById:{method:"GET"},createPost:{method:"POST"},updatePost:{method:"PUT"},likePost:{method:"POST",params:{like:"like"}},removePost:{method:"DELETE"}},service=$resource(postUrl,params,actions);return service.createPostWithImage=function(parameters,post){angular.extend(post,parameters);var filePath=post.file?post.file:"[]";delete post.file,post.category="SHOW-POST";var options={params:post,chunkedMode:!1,headers:{Connection:"close",Authorization:"Bearer "+AuthService.getToken()}};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/post",filePath,options,!0)}},service.updatePostWithImage=function(parameters,post){angular.extend(post,parameters);var filePath=post.file;delete post.file;var options={params:post,chunkedMode:!1,httpMethod:"PUT",headers:{Connection:"close",Authorization:"Bearer "+AuthService.getToken()}};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/post",filePath,options,!0)}},service}angular.module("app").factory("Posts",Posts),Posts.$inject=["$resource","governorUrl","$cordovaFileTransfer","AuthService"]}(),function(){"use strict";function Products($resource,governorUrl,$cordovaFileTransfer){var productUrl=governorUrl+"/product/:list/:image/:mine/:checkProductCode",params={list:"@list",image:"@image",mine:"@mine",checkProductCode:"@checkProductCode"},actions={getProducts:{method:"GET",params:{list:"list"}},getMyProducts:{method:"GET",params:{list:"list",mine:"mine"}},checkProductCode:{method:"GET",params:{checkProductCode:"checkProductCode"}},findById:{method:"GET"},createProduct:{method:"POST"},updateProduct:{method:"PUT"},removeProduct:{method:"DELETE"}},service=$resource(productUrl,params,actions);return service.createProductWithImage=function(parameters,product){angular.extend(product,parameters);var filePath=product.file;delete product.file;var options={params:product,chunkedMode:!1};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/product/image",filePath,options)}},service.updateProductWithImage=function(parameters,product){angular.extend(product,parameters);var filePath=product.file;delete product.file;var options={params:product,chunkedMode:!1,httpMethod:"PUT"};return{$promise:$cordovaFileTransfer.upload(governorUrl+"/product/image",filePath,options)}},service}angular.module("app").factory("Products",Products),Products.$inject=["$resource","governorUrl","$cordovaFileTransfer"]}(),function(){"use strict";function RoyaltyPoints($resource,governorUrl){var royaltyUrl=governorUrl+"/royaltyPoint/:list/:mine",params={list:"@list",mine:"@mine"},actions={getRoyaltyPoints:{method:"GET",params:{list:"list"}},getMyRoyaltyPoints:{method:"GET",params:{list:"list",mine:"mine"}},findById:{method:"GET"},createRoyaltyPoint:{method:"POST"},updateRoyaltyPoint:{method:"PUT",isArray:!0},removeRoyaltyPoint:{method:"DELETE"}},service=$resource(royaltyUrl,params,actions);return service}angular.module("app").factory("RoyaltyPoints",RoyaltyPoints),RoyaltyPoints.$inject=["$resource","governorUrl"]}(),function(){"use strict";function Users($resource,governorUrl){var userUrl=governorUrl+"/user",params={},actions={},service=$resource(userUrl,params,actions);return service}angular.module("app").factory("Users",Users),Users.$inject=["$resource","governorUrl"]}(),function(){"use strict";function daum($window){return $window.daum?$window.daum:void 0}angular.module("app").factory("daum",daum),daum.$inject=["$window"]}(),function(){"use strict";function localStorage($window){return $window.localStorage?$window.localStorage:void 0}angular.module("app").factory("localStorage",localStorage),localStorage.$inject=["$window"]}(),function(){"use strict";function moment($window){return $window.moment?$window.moment:void 0}angular.module("app").factory("moment",moment),moment.$inject=["$window"]}(),function(){"use strict";function _($window){return $window._?$window._:void 0}angular.module("app").factory("_",_),_.$inject=["$window"]}(),function(){"use strict";function PushService($http,$log,$q,$cordovaPush,$cordovaToast,$cordovaDialogs,$cordovaLocalNotification,$rootScope,googlePushSenderID,governorUrl,appName,LocalService){function getDeviceId(){return deviceId}function registerDevice(){$log.info("PushService - Register push notification");var config=null;ionic.Platform.isAndroid()?($log.info("PushService - Android push"+googlePushSenderID),config={senderID:googlePushSenderID}):ionic.Platform.isIOS()&&($log.info("PushService - IOS push"),config={badge:"true",sound:"true",alert:"true"}),config||$log.info("PushService - Not a supported device"),$cordovaPush.register(config).then(function(result){$log.info("PushService - Register success "+result),ionic.Platform.isIOS()&&storeDeviceToken(result,TYPE_IOS)},function(err){$log.info("PushService - Register error "+err)})}function updateDeviceToken(active){var deferred=$q.defer();return $http({url:governorUrl+"/device",method:"PUT",headers:{"Content-Type":"application/json"},params:{deviceId:getDeviceId(),active:active}}).success(function(data,status,headers,config){$log.info("PushService - Success updating device push settings "+JSON.stringify(data)),deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data),$log.info("PushService - Failed updating device push settings")}),deferred.promise}function storeDeviceToken(deviceId,deviceType){var registration={deviceId:deviceId,platform:deviceType,active:!0};$log.info("PushService - register to server: "+JSON.stringify(registration));$q.defer();$http({url:governorUrl+"/device",method:"POST",headers:{"Content-Type":"application/json"},data:registration}).success(function(data,status,headers,config){$log.info("PushService - registered to server: "+JSON.stringify(data)),setDeviceId(data.device.deviceId),angular.isDefined(data.device.optionalType)&&setTradeNotification(data.device.optionalType)}).error(function(data,status,headers,config){$log.info("PushService - error: "+JSON.stringify(data))})}function handleAndroid(notification){switch($log.info("In foreground "+JSON.stringify(notification)),notification.event){case"registered":notification.regid.length>0&&storeDeviceToken(notification.regid,TYPE_ANDROID);break;case"message":$log.info(JSON.stringify(notification)),window.plugin.notification.local.schedule({title:notification.payload.title,text:notification.payload.message,icon:"res://icon.png",smallIcon:"res://pushicon.png"});break;case"error":$log.info("error"),$cordovaDialogs.alert(notification.msg,"Push notification error event");break;default:$log.info("default"),$cordovaDialogs.alert(notification.event,"Push notification handler - Unprocessed Event")}}function setDeviceId(value){deviceId=value}function handleIOS(notification){}var TYPE_ANDROID="ANDROID",TYPE_IOS="IOS",deviceId=null;this.getDeviceId=getDeviceId,this.registerDevice=registerDevice,this.updateDeviceToken=updateDeviceToken,$rootScope.$on("$cordovaPush:notificationReceived",function(event,notification){ionic.Platform.isAndroid()?handleAndroid(notification):ionic.Platform.isIOS()&&handleIOS(notification)})}angular.module("applicat.push.service",["ngCordova"]).service("PushService",PushService),PushService.$inject=["$http","$log","$q","$cordovaPush","$cordovaToast","$cordovaDialogs","$cordovaLocalNotification","$rootScope","googlePushSenderID","governorUrl","appName","LocalService"]}(),function(){"use strict";function AuthInterceptor($q,$injector,$location,LocalService,appName){return{request:function(config){var token=LocalService.get(appName+"_auth_token");return token&&(token=angular.fromJson(LocalService.get(appName+"_auth_token")).token),token&&(config.headers["Content-Type"]="application/json",config.headers.Authorization="Bearer "+token),config},responseError:function(response){if(401===response.status||403===response.status||405===response.status||498===response.status)"/login"!==$location.path()?(LocalService.unset(appName+"_auth_token"),$location.path("/login"),(null==response.data||void 0==response.data)&&(response.data={message:"권한이 없는 페이지이거나 로그인하지 않았습니다. 로그인해주세요."})):response.data.hideMessage=!0;else if(300===response.status){var redirectPath=null,message="";switch(response.data.redirectCode){case"ACTIVATE":redirectPath="/resend/false";break;case"RESET":redirectPath="/passReset"}$location.path()!==redirectPath?($location.path(redirectPath),(null==response.data||void 0==response.data)&&(response.data={message:message})):response.data.hideMessage=!0}return $q.reject(response)}}}function AuthService($http,$q,$location,$state,governorUrl,LocalService,appName,kakaoKey,facebookKey,$cordovaOauth){function setUser(userInfo){user=userInfo}var user=null,selectedApp={name:"어플리켓"};this.getUser=function(){return user},this.getApp=function(){return selectedApp},this.getToken=function(){var token=LocalService.get(appName+"_auth_token");return token?token=angular.fromJson(LocalService.get(appName+"_auth_token")).token:void $state.go("login")},this.init=function(){var token=JSON.parse(LocalService.get(appName+"_auth_token"));null!=token&&null!=token.user&&setUser(token.user)},this.register=function(user){var deferred=$q.defer();return $http({url:governorUrl+"/user/register",method:"post",headers:{"Content-Type":"application/json"},params:user}).success(function(data,status,headers,config){deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data)}),deferred.promise},this.registerWithImage=function(user,file,success,fail){var options=new FileUploadOptions,newUser=angular.copy(user);options.params=newUser,options.headers={Connection:"close"},options.chunkedMode=!1;var ft=new FileTransfer;ft.upload(file,encodeURI(governorUrl+"/user/registerWithImage"),success,fail,options,!0)},this.login=function(email,password){var deferred=$q.defer();return $http({url:governorUrl+"/auth/local",method:"post",headers:{"Content-Type":"application/json"},data:{identifier:email,password:password}}).success(function(data,status,headers,config){LocalService.set(appName+"_auth_token",JSON.stringify(data)),setUser(data.user),deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data)}),deferred.promise},this.verifyResetCode=function(email,code){var deferred=$q.defer();return $http({url:governorUrl+"/user/passwordresetcomplete",method:"put",headers:{"Content-Type":"application/json"},data:{email:email,code:code}}).success(function(data,status,headers,config){LocalService.set(appName+"_auth_token",JSON.stringify(data)),deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data)}),deferred.promise},this.passReset=function(email){var deferred=$q.defer();return $http({url:governorUrl+"/user/resetStart",method:"post",headers:{"Content-Type":"application/json"},data:{email:email}}).success(function(data,status,headers,config){deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data)}),deferred.promise},this.logout=function(){LocalService.unset(appName+"_auth_token"),setUser(null),$location.path("/login")},this.changePassword=function(oldPassword,newPassword){var deferred=$q.defer();return $http({url:governorUrl+"/user/changePassword",method:"post",headers:{"Content-Type":"application/json"},data:{oldPassword:oldPassword,newPassword:newPassword}}).success(function(data,status,headers,config){deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data)}),deferred.promise},this.checkNickname=function(nickname){var deferred=$q.defer();return $http({url:governorUrl+"/user/checknickname",method:"get",headers:{"Content-Type":"application/json"},params:{nickname:nickname}}).success(function(data,status,headers,config){deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data)}),deferred.promise},this.checkEmail=function(email){var deferred=$q.defer();return $http({url:governorUrl+"/user/checkEmail",method:"get",headers:{"Content-Type":"application/json"},params:{email:email}}).success(function(data,status,headers,config){deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data)}),deferred.promise},this.getMyProfile=function(){var deferred=$q.defer();return $http({url:governorUrl+"/user/profile",method:"get",headers:{"Content-Type":"application/json"}}).success(function(data,status,headers,config){deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data)}),deferred.promise},this.updateMyProfile=function(nickname){var deferred=$q.defer();return $http({url:governorUrl+"/user/update",method:"put",headers:{"Content-Type":"application/json"},data:{nickname:nickname}}).success(function(data,status,headers,config){deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data)}),deferred.promise},this.updateMyProfileWithImage=function(user,file,success,fail){var options=new FileUploadOptions,updateUser=angular.copy(user);options.params=updateUser,options.httpMethod="PUT",options.headers={Connection:"close",Authorization:"Bearer "+this.getToken()},options.chunkedMode=!1;var ft=new FileTransfer;ft.upload(file,encodeURI(governorUrl+"/user/updateWithImage"),success,fail,options,!0)},this.loginWithKakao=function(){var deferred=$q.defer();return $cordovaOauth.kakao(kakaoKey).then(function(result){result.provider="kakao",$http({url:governorUrl+"/auth/register",method:"post",headers:{"Content-Type":"application/json"},data:result}).success(function(data,status,headers,config){LocalService.set(appName+"_auth_token",JSON.stringify(data)),setUser(data.user),deferred.resolve({message:"done"})}).error(function(data,status,headers,config){deferred.reject(data)})},function(error){deferred.reject(error)}),deferred.promise},this.loginWithFacebook=function(){var deferred=$q.defer();return $cordovaOauth.facebook(facebookKey,["email"]).then(function(result){result.provider="facebook",$http({url:governorUrl+"/auth/register",method:"post",headers:{"Content-Type":"application/json"},data:result}).success(function(data,status,headers,config){LocalService.set(appName+"_auth_token",JSON.stringify(data)),setUser(data.user),deferred.resolve({message:"done"})}).error(function(data,status,headers,config){deferred.reject(data)})},function(error){deferred.reject(error)}),deferred.promise}}angular.module("app").factory("AuthInterceptor",AuthInterceptor),AuthInterceptor.$inject=["$q","$injector","$location","LocalService","appName"],angular.module("app").service("AuthService",AuthService),AuthService.$inject=["$http","$q","$location","$state","governorUrl","LocalService","appName","kakaoKey","facebookKey","$cordovaOauth"]}(),function(){"use strict";function Dom($timeout,$window){function focusById(id){$timeout(function(){var domElement=$window.document.getElementById(id);domElement&&domElement.focus()})}var service={focusById:focusById};return service}angular.module("app").factory("Dom",Dom),Dom.$inject=["$timeout","$window"]}(),function(){"use strict";function Favorite($stateParams,Message,Posts,localStorage){function isFavorite(localStorageItem){var favoritesString=localStorage.getItem(localStorageItem),favoritesArray=angular.fromJson(favoritesString);Array.isArray(favoritesArray)||(favoritesArray=[]);for(var i=0;i<favoritesArray.length;i++){var favorite=favoritesArray[i];if(favorite.id===$stateParams.id)return!0}}function saveToFavorite(localStorageItem,vm,model,sendLikeStorageName){var favoritesString=localStorage.getItem(localStorageItem),favoritesArray=angular.fromJson(favoritesString);Array.isArray(favoritesArray)||(favoritesArray=[]);for(var i=0;i<favoritesArray.length;i++){var favorite=favoritesArray[i];if(favorite.id===$stateParams.id)return favoritesArray.splice(i,1),favoritesString=angular.toJson(favoritesArray),localStorage.setItem(localStorageItem,favoritesString),vm.styleFavorite=!1,Message.popUp.alert["default"]("즐겨찾기 알림","즐겨찾기에서 삭제되었습니다."),!1}var favoriteToSave={id:model.current.id};addToAttributes(model,favoriteToSave),favoritesArray.push(favoriteToSave),favoritesString=angular.toJson(favoritesArray),localStorage.setItem(localStorageItem,favoritesString),sendLikeStorageName&&sendLike(sendLikeStorageName,favoriteToSave.id,model),vm.styleFavorite=!0,Message.popUp.alert["default"]("즐겨찾기 알림","즐겨찾기에 추가되었습니다.")}function addToAttributes(model,favoriteToSave){if(model.current.name&&(favoriteToSave.name=model.current.name),model.current.title&&(favoriteToSave.title=model.current.title),model.current.photos.length>0&&(favoriteToSave.photos=[{url:model.current.photos[0].url}]),model.current.location&&(favoriteToSave.location={coordinates:model.current.location.coordinates}),model.current.address&&(favoriteToSave.address=model.current.address),model.current.createdBy&&(favoriteToSave.createdBy={},favoriteToSave.createdBy.nickname=model.current.createdBy.nickname),model.current.likes&&(favoriteToSave.likes=model.current.likes),model.current.comments){favoriteToSave.comments=[];for(var i=0;i<model.current.comments.length;i++)favoriteToSave.comments.push(1)}}function sendLike(likedOnceStorageItem,id,model){var likedOnceString=localStorage.getItem(likedOnceStorageItem),likedOnceArray=angular.fromJson(likedOnceString);Array.isArray(likedOnceArray)||(likedOnceArray=[]);for(var i=0;i<likedOnceArray.length;i++){var currentId=likedOnceArray[i];if(currentId===id)return!1}likedOnceArray.push(id),likedOnceString=angular.toJson(likedOnceArray),localStorage.setItem(likedOnceStorageItem,likedOnceString),Posts.likePost({post:id}).$promise.then(function(postWrapper){model.current.likes=postWrapper.posts[0].likes},function(error){})}var service={isFavorite:isFavorite,saveToFavorite:saveToFavorite};return service}angular.module("app").factory("Favorite",Favorite),Favorite.$inject=["$stateParams","Message","Posts","localStorage"]}(),function(){"use strict";angular.module("app").factory("LocalService",function(){return{get:function(key){return localStorage.getItem(key)},set:function(key,val){return localStorage.setItem(key,val)},unset:function(key){return localStorage.removeItem(key)},getSession:function(key){return sessionStorage.getItem(key)},setSession:function(key,val){return sessionStorage.setItem(key,val)},unsetSession:function(key){return sessionStorage.removeItem(key)}}})}(),function(){"use strict";function Message($ionicLoading,$ionicPopup){function loadingDefault(message){$ionicLoading.show(message)}function messageSuccess(message){$ionicLoading.show({template:'<h4 class="message-success">'+message+"</h4>",duration:2e3})}function messageError(message){$ionicLoading.show({template:'<h4 class="message-error">'+message+"</h4>",duration:2e3})}function loadingHide(){$ionicLoading.hide()}function popUpAlertDefault(title,message){return $ionicPopup.alert({title:title||"인터넷이 끊겼습니다.",template:message||"인터넷을 켜주세요."})}var service={loading:{"default":loadingDefault,hide:loadingHide},message:{success:messageSuccess,error:messageError},popUp:{alert:{"default":popUpAlertDefault}}};return service}angular.module("app").factory("Message",Message),Message.$inject=["$ionicLoading","$ionicPopup"]}(),function(){"use strict";function parentScroll($ionicScrollDelegate,$timeout,$window){function compile(element,attr){return $window.horizontalIonScrollCount||($window.horizontalIonScrollCount=0),$window.horizontalIonScrollCount++,attr.delegateHandle="horizontal"+$window.horizontalIonScrollCount,function(scope,element,attr){$timeout(function(){var horizontal=attr.delegateHandle,sv=$ionicScrollDelegate.$getByHandle(horizontal).getScrollView(),container=sv.__container,originaltouchStart=sv.touchStart,originalmouseDown=sv.mouseDown,originaltouchMove=sv.touchMove,originalmouseMove=sv.mouseMove;container.removeEventListener("touchstart",sv.touchStart),container.removeEventListener("mousedown",sv.mouseDown),$window.document.removeEventListener("touchmove",sv.touchMove),$window.document.removeEventListener("mousemove",sv.mousemove),sv.touchStart=function(e){e.preventDefault=function(){},originaltouchStart.apply(sv,[e])},sv.touchMove=function(e){e.preventDefault=function(){},originaltouchMove.apply(sv,[e])},sv.mouseDown=function(e){e.preventDefault=function(){},originalmouseDown&&originalmouseDown.apply(sv,[e])},sv.mouseMove=function(e){e.preventDefault=function(){},originalmouseMove&&originalmouseMove.apply(sv,[e])},container.addEventListener("touchstart",sv.touchStart,!1),container.addEventListener("mousedown",sv.mouseDown,!1),$window.document.addEventListener("touchmove",sv.touchMove,!1),$window.document.addEventListener("mousemove",sv.mouseMove,!1)})}}return{scope:!0,restrict:"A",compile:compile}}angular.module("app").directive("parentScroll",parentScroll),parentScroll.$inject=["$ionicScrollDelegate","$timeout","$window"]}(),function(){"use strict";angular.module("app").directive("ngEnter",function(){return function(scope,element,attrs){element.bind("keydown keypress",function(event){13===event.which&&(scope.$apply(function(){scope.$eval(attrs.ngEnter)}),event.preventDefault())})}})}(),function(){"use strict";function touch($timeout){function link(scope,element){element.on("click",function(){element.addClass("touch"),$timeout(function(){element.removeClass("touch")},50)})}return{restrict:"A",link:link}}angular.module("app").directive("touch",touch),touch.$inject=["$timeout"]}(),function(){"use strict";function vw($rootScope,$window){function link(scope,element){$rootScope.vw=element.prop("offsetWidth"),$window.addEventListener("resize",function(){$rootScope.$apply(function(){$rootScope.vw=element.prop("offsetWidth")})})}return{link:link
}}angular.module("app").directive("vw",vw),vw.$inject=["$rootScope","$window"]}(),function(){"use strict";function groupByOpeningHours(_){function filter(openingHours){openingHours=appendIndexToObj(openingHours);var grouped=groupByBusinessHours(openingHours),orderedResultArray=createArrayOfObjWithGroup(grouped),textArray=_.map(orderedResultArray,function(result){result.days=_.map(result.days,function(day){var daysKorean=parseDay(day);return daysKorean}),result.days=tildeArrayValuesToText(result.days);var apendTime="";apendTime=result.start===result.end?"휴무":result.start+" ~ "+result.end;var texts=result.days+" "+apendTime;return texts});return textArray}function appendIndexToObj(openingHours){for(var i=0;i<openingHours.length;i++)openingHours[i].index=i;return openingHours}function groupByBusinessHours(openingHours){var grouped=_.groupBy(openingHours,function(hoursObj){var start=hoursObj.start,end=hoursObj.end,groupCategory=start+end;return groupCategory});return grouped}function createArrayOfObjWithGroup(grouped){for(var keys=Object.keys(grouped),resultArray=[],i=0;i<keys.length;i++){for(var key=keys[i],subOpeningHoursArray=grouped[key],daysResult=[],j=0;j<subOpeningHoursArray.length;j++){var openingHourObj=subOpeningHoursArray[j];daysResult.push(openingHourObj.index)}var start=subOpeningHoursArray[0].start,end=subOpeningHoursArray[0].end;resultArray.push({days:daysResult,start:start,end:end})}var orderedResultArray=_.sortBy(resultArray,function(obj){var day=obj.days[0];return 0===day&&(day=7),day});return orderedResultArray}function parseDay(day){return 0===day?"일요일":1===day?"월":2===day?"화":3===day?"수":4===day?"목":5===day?"금":6===day?"토":void 0}function tildeArrayValuesToText(array){for(var daysInNumbers=_.map(array,function(dayInKorean){return"일요일"===dayInKorean?7:"월"===dayInKorean?1:"화"===dayInKorean?2:"수"===dayInKorean?3:"목"===dayInKorean?4:"금"===dayInKorean?5:"토"===dayInKorean?6:void 0}),i=0;i<daysInNumbers.length-1;i++){var day_1=daysInNumbers[i],day_2=daysInNumbers[i+1];if(Math.abs(day_1-day_2)>1){for(var concatStart=array[0],j=1;j<daysInNumbers.length;j++)concatStart=concatStart+", "+array[j];return concatStart}}return array.length>2?array[0]+" ~ "+array[array.length-1]:2===array.length?array[0]+", "+array[1]:1===array.length?array[0]:void 0}return filter}angular.module("app").filter("groupByOpeningHours",groupByOpeningHours),groupByOpeningHours.$inject=["_"]}(),function(){"use strict";function filterByTag(){function filter(collection,tagName){var resultArray=[];if(collection)for(var i=0;i<collection.length;i++)for(var element=collection[i],j=0;j<element.tags.length;j++){var tag=element.tags[j];tag===tagName&&resultArray.push(element)}return resultArray}return filter}angular.module("app").filter("filterByTag",filterByTag)}(),function(){"use strict";function EventDetailController(EventDetailModel,Posts,Message,$stateParams,$scope){function doBeforeEnter(){getPosts()}function getPosts(){Message.loading["default"](),Posts.get({id:$stateParams.id,populates:"photos"}).$promise.then(function(postWrapper){EventDetailModel.post=postWrapper.post,Message.loading.hide()},function(error){Message.popUp.alert["default"]("이벤트 알림","종료된 이벤트입니다.")})}var EventDetail=this;EventDetail.Model=EventDetailModel,$scope.$on("$ionicView.beforeEnter",doBeforeEnter)}angular.module("app").controller("EventDetailController",EventDetailController),EventDetailController.$inject=["EventDetailModel","Posts","Message","$stateParams","$scope"]}(),function(){"use strict";function EventDetailModel(){var model={post:{id:"",comments:[],photos:[{url:""}],content:"",title:"",category:"SHOW-POST",createdBy:{nickname:""}}};return model}angular.module("app").factory("EventDetailModel",EventDetailModel)}(),function(){"use strict";function EventListController(EventListModel,Posts,$state,$scope,Message){function goToDetailHandler(post){$state.go("main.announcements.eventDetail",{id:post.id})}function getNewerPosts(){var currentPosts=EventListModel.postsWrapper.posts;Posts.getPosts({category:"EVENT-POST",limit:10,newerThan:currentPosts[0].id,populates:"photos"}).$promise.then(function(data){data.posts.length||Message.popUp.alert["default"]("이벤트 알림","새로운 이벤트가 없습니다."),data.posts.forEach(function(post){currentPosts.unshift(post)}),$scope.$broadcast("scroll.refreshComplete")},function(error){Message.popUp.alert["default"](),$scope.$broadcast("scroll.refreshComplete")})}function getOlderPosts(){var currentPosts=EventListModel.postsWrapper.posts;Posts.getPosts({category:"EVENT-POST",sort:"id DESC",limit:10,olderThan:currentPosts[currentPosts.length-1].id,popluates:"photos"}).$promise.then(function(data){data.posts.forEach(function(post){currentPosts.push(post)}),$scope.$broadcast("scroll.infiniteScrollComplete"),EventListModel.postsWrapper.more=data.more},function(error){Message.popUp.alert["default"](),$scope.$broadcast("scroll.infiniteScrollComplete")})}function checkForMore(){return EventListModel.postsWrapper.more}function doBeforeEnter(){EventListModel.postsWrapper.posts.length<10&&(Message.loading["default"](),Posts.getPosts({category:"EVENT-POST",sort:"id DESC",limit:10,populates:"photos"}).$promise.then(function(data){EventListModel.postsWrapper=data,Message.loading.hide()},function(error){Message.popUp.alert["default"]()}))}var EventList=this;EventList.Model=EventListModel,EventList.goToDetailHandler=goToDetailHandler,EventList.getNewerPosts=getNewerPosts,EventList.getOlderPosts=getOlderPosts,EventList.checkForMore=checkForMore,$scope.$on("$ionicView.beforeEnter",doBeforeEnter)}angular.module("app").controller("EventListController",EventListController),EventListController.$inject=["EventListModel","Posts","$state","$scope","Message"]}(),function(){"use strict";function EventListModel(){var model={postsWrapper:{posts:[{title:"",content:"",category:"",comments:[],photos:[{url:""}]}],more:!0}};return model}angular.module("app").factory("EventListModel",EventListModel)}(),function(){"use strict";function NoticeDetailController(NoticeDetailModel,Posts,$stateParams,$scope,Message){function doBeforeEnter(){getPosts()}function getPosts(){Message.loading["default"](),Posts.get({id:$stateParams.id,populates:"photos"}).$promise.then(function(postWrapper){NoticeDetailModel.post=postWrapper.post,Message.loading.hide()},function(error){Message.popUp.alert["default"]("공지사항 알림","없는 공지사항 입니다")})}var NoticeDetail=this;NoticeDetail.Model=NoticeDetailModel,$scope.$on("$ionicView.beforeEnter",doBeforeEnter)}angular.module("app").controller("NoticeDetailController",NoticeDetailController),NoticeDetailController.$inject=["NoticeDetailModel","Posts","$stateParams","$scope","Message"]}(),function(){"use strict";function NoticeDetailModel(){var model={post:{id:"",comments:[],photos:[{url:""}],content:"",title:"",category:"NOTICE-POST",createdBy:{nickname:""}}};return model}angular.module("app").factory("NoticeDetailModel",NoticeDetailModel)}(),function(){"use strict";function NoticeListController(NoticeListModel,Posts,$state,$scope,Message){function goToDetailHandler(post){$state.go("main.announcements.noticeDetail",{id:post.id})}function getNewerPosts(){var currentPosts=NoticeListModel.postsWrapper.posts;Posts.getPosts({category:"NOTICE-POST",limit:10,newerThan:currentPosts[0].id,populates:"photos"}).$promise.then(function(data){data.posts.length||Message.popUp.alert["default"]("공지사항 알림","새로운 공지사항이 없습니다."),data.posts.forEach(function(post){currentPosts.unshift(post)}),$scope.$broadcast("scroll.refreshComplete")},function(error){Message.popUp.alert["default"](),$scope.$broadcast("scroll.refreshComplete")})}function getOlderPosts(){var currentPosts=NoticeListModel.postsWrapper.posts;Posts.getPosts({category:"NOTICE-POST",sort:"id DESC",limit:10,olderThan:currentPosts[currentPosts.length-1].id,populates:"photos"}).$promise.then(function(data){data.posts.forEach(function(post){currentPosts.push(post)}),$scope.$broadcast("scroll.infiniteScrollComplete"),NoticeListModel.postsWrapper.more=data.more},function(error){Message.popUp.alert["default"](),$scope.$broadcast("scroll.infiniteScrollComplete")})}function checkForMore(){return NoticeListModel.postsWrapper.more}function doBeforeEnter(){NoticeListModel.postsWrapper.posts.length<10&&(Message.loading["default"](),Posts.getPosts({category:"NOTICE-POST",sort:"id DESC",limit:10,populates:"photos"}).$promise.then(function(data){NoticeListModel.postsWrapper=data,Message.loading.hide()},function(error){Message.popUp.alert["default"]()}))}var NoticeList=this;NoticeList.Model=NoticeListModel,NoticeList.goToDetailHandler=goToDetailHandler,NoticeList.getNewerPosts=getNewerPosts,NoticeList.getOlderPosts=getOlderPosts,NoticeList.checkForMore=checkForMore,$scope.$on("$ionicView.beforeEnter",doBeforeEnter)}angular.module("app").controller("NoticeListController",NoticeListController),NoticeListController.$inject=["NoticeListModel","Posts","$state","$scope","Message"]}(),function(){"use strict";function NoticeListModel(){var model={postsWrapper:{posts:[{title:"",content:"",category:"",comments:[],photos:[{url:""}]}],more:!0}};return model}angular.module("app").factory("NoticeListModel",NoticeListModel)}(),function(){"use strict";function BalanceDetailController(BalanceDetailModel,$stateParams,AuthService,$scope){function doBeforeEnter(){BalanceDetail.placeName=$stateParams.placeName,BalanceDetail.points=$stateParams.points}var BalanceDetail=this;BalanceDetail.Model=BalanceDetailModel,BalanceDetail.placeName=null,BalanceDetail.points=null,BalanceDetail.username=AuthService.getUser().nickname,$scope.$on("$ionicView.beforeEnter",doBeforeEnter)}angular.module("app").controller("BalanceDetailController",BalanceDetailController),BalanceDetailController.$inject=["BalanceDetailModel","$stateParams","AuthService","$scope"]}(),function(){"use strict";function BalanceDetailModel(){var model={};return model}angular.module("app").factory("BalanceDetailModel",BalanceDetailModel)}(),function(){"use strict";function BalanceListController(BalanceListModel,RoyaltyPoints,Places,$scope,$state,$q,_){function getMyBalanceList(){return RoyaltyPoints.getMyRoyaltyPoints({category:"NAIL-ROYALTYPOINT"}).$promise.then(function(royaltyWrapper){var promisesBulk=findByIdsInArray(royaltyWrapper.royaltyPoints);promisesBulk.then(function(arrayOfPlaces){for(var royaltyPoints=_.pluck(royaltyWrapper.royaltyPoints,"points"),names=_.pluck(arrayOfPlaces,"name"),addresses=_.pluck(arrayOfPlaces,"address"),photoUrls=_.pluck(_.pluck(_.pluck(arrayOfPlaces,"photos"),"0"),"url"),arrayOfResults=[],i=0;i<royaltyPoints.length;i++){var result={};result.name=names[i],result.royaltyPoints=royaltyPoints[i],result.address=addresses[i],result.url=photoUrls[i],arrayOfResults.push(result)}BalanceListModel.current.royaltyPointObjs=arrayOfResults},function(arrayOfErrors){})},function(error){})}function findByIdsInArray(arrayOfObjects){var arrayOfIds=_.pluck(arrayOfObjects,"place"),arrayOfPromises=_.map(arrayOfIds,function(id){return Places.findById({id:id,populates:"photos"}).$promise}),promisesBulkToResolve=$q.all(arrayOfPromises);return promisesBulkToResolve}function goToHandler(state,params){return $state.go(state,params)}function doBeforeEnter(){getMyBalanceList()}var BalanceList=this;BalanceList.Model=BalanceListModel,BalanceList.goToHandler=goToHandler,$scope.$on("$ionicView.beforeEnter",doBeforeEnter)}angular.module("app").controller("BalanceListController",BalanceListController),BalanceListController.$inject=["BalanceListModel","RoyaltyPoints","Places","$scope","$state","$q","_"]}(),function(){"use strict";function BalanceListModel(){var model={current:{}};return model}angular.module("app").factory("BalanceListModel",BalanceListModel)}(),function(){"use strict";function ShowDetailController(ShowDetailModel,Posts,Comments,MainModel,$stateParams,$scope,Message,Favorite){function loadPosts(){return Message.loading["default"](),Posts.findById({id:$stateParams.id,populates:"comments,photos"}).$promise.then(function(postWrapper){ShowDetailModel.current=postWrapper.post,Message.loading.hide()},function(error){Message.loading.hide(),Message.popUp.alert["default"]("해당포스트가 없습니다","지워진 포스트이거나 인터넷이 꺼져있습니다. 즐겨찾기에서 삭제해주세요")})}function addComment(comment){Comments.addCommentToPost({},{content:comment,post:$stateParams.id}).$promise.then(function(data){var createdById=data.createdBy;data.createdBy={},data.createdBy.nickname=MainModel.user.nickname||MainModel.user.username,data.createdBy.createdBy=createdById,Message.popUp.alert["default"]("댓글달기 알림","댓글을 성공적으로 작성하셨습니다."),ShowDetailModel.current.comments.push(data),ShowDetail.comment=null},function(error){Message.popUp.alert["default"]("댓글달기 알림","인터넷이 꺼져있습니다.")})}function doBeforeEnter(){loadPosts(),ShowDetail.styleFavorite=Favorite.isFavorite("NAIL_SAVED_POSTS")}var ShowDetail=this;ShowDetail.Model=ShowDetailModel,ShowDetail.toggleSavePost=Favorite.saveToFavorite.bind(null,"NAIL_SAVED_POSTS",ShowDetail,ShowDetailModel,"NAIL_LIKED_ONCE"),ShowDetail.addComment=addComment,$scope.$on("$ionicView.beforeEnter",doBeforeEnter)}angular.module("app").controller("ShowDetailController",ShowDetailController),ShowDetailController.$inject=["ShowDetailModel","Posts","Comments","MainModel","$stateParams","$scope","Message","Favorite"]}(),function(){"use strict";function ShowDetailModel(){var model={current:{id:"",comments:[],photos:[{url:""}],content:"",title:"",category:"SHOW-POST",createdBy:{nickname:""},likes:""}};return model}angular.module("app").factory("ShowDetailModel",ShowDetailModel)}(),function(){"use strict";function SavedShowListController(SavedShowListModel,$state,$scope,localStorage){function doBeforeEnter(){SavedShowListModel.posts=angular.fromJson(localStorage.getItem("NAIL_SAVED_POSTS"))}function goToDetailHandler(post){$state.go("main.show.detail",{id:post.id})}var SavedShowList=this;SavedShowList.Model=SavedShowListModel,SavedShowList.goToDetailHandler=goToDetailHandler,$scope.$on("$ionicView.beforeEnter",doBeforeEnter)}angular.module("app").controller("SavedShowListController",SavedShowListController),SavedShowListController.$inject=["SavedShowListModel","$state","$scope","localStorage"]}(),function(){"use strict";function SavedShowListModel(){var model={};return model}angular.module("app").factory("SavedShowListModel",SavedShowListModel),SavedShowListModel.$inject=[]}(),function(){"use strict";function ShowListController(ShowListModel,Posts,$state,$scope,Message){function goToDetailHandler(post){$state.go("main.show.detail",{id:post.id})}function getNewerPosts(){var currentPosts=ShowListModel.postsWrapper.posts;Posts.getPosts({category:"SHOW-POST",limit:10,newerThan:currentPosts[0]&&currentPosts[0].id,populates:"photos"}).$promise.then(function(data){data.posts.length||Message.popUp.alert["default"]("새로운포스트가 없습니다","나중에 다시 확인해주세요"),data.posts.forEach(function(post){currentPosts.unshift(post)}),$scope.$broadcast("scroll.refreshComplete")},function(error){Message.popUp.alert["default"](),$scope.$broadcast("scroll.refreshComplete")})}function getOlderPosts(){var currentPosts=ShowListModel.postsWrapper.posts;Posts.getPosts({category:"SHOW-POST",sort:"id DESC",limit:10,olderThan:currentPosts[currentPosts.length-1]&&currentPosts[currentPosts.length-1].id,populates:"photos"}).$promise.then(function(data){data.posts.forEach(function(post){currentPosts.push(post)}),$scope.$broadcast("scroll.infiniteScrollComplete"),ShowListModel.postsWrapper.more=data.more},function(error){Message.popUp.alert["default"](),$scope.$broadcast("scroll.infiniteScrollComplete")})}function checkForMore(){return ShowListModel.postsWrapper.more}function doBeforeEnter(){ShowListModel.postsWrapper.posts.length<10&&(Message.loading["default"](),Posts.getPosts({category:"SHOW-POST",sort:"id DESC",limit:10,populates:"photos,comments,createdBy"}).$promise.then(function(data){ShowListModel.postsWrapper=data,Message.loading.hide()},function(error){Message.popUp.alert["default"]()}))}var ShowList=this;ShowList.Model=ShowListModel,ShowList.goToDetailHandler=goToDetailHandler,ShowList.getNewerPosts=getNewerPosts,ShowList.getOlderPosts=getOlderPosts,ShowList.checkForMore=checkForMore,$scope.$on("$ionicView.beforeEnter",doBeforeEnter)}angular.module("app").controller("ShowListController",ShowListController),ShowListController.$inject=["ShowListModel","Posts","$state","$scope","Message"]}(),function(){"use strict";function ShowListModel(){var model={postsWrapper:{posts:[{title:"",content:"",category:"",comments:[],photos:[{url:""}]}],more:!0}};return model}angular.module("app").factory("ShowListModel",ShowListModel)}(),function(){"use strict";function AnnouncementsController($state,AnnouncementsModel){function goToHandler(state,params){return $state.go(state,params)}var Announcements=this;Announcements.Model=AnnouncementsModel,Announcements.goToHandler=goToHandler}angular.module("app").controller("AnnouncementsController",AnnouncementsController),AnnouncementsController.$inject=["$state","AnnouncementsModel"]}(),function(){"use strict";function AnnouncementsModel(){var model={};return model}angular.module("app").factory("AnnouncementsModel",AnnouncementsModel)}(),function(){"use strict";function BalanceController(BalanceService,Message){function getMyRoyaltyPoints(){Message.loading["default"]();var balancePromise=BalanceService.getMyRoyaltyPoints();balancePromise.then(function(data){Balance.balanceList=data.royaltyPoints,Message.loading.hide()}),balancePromise["catch"](function(data){Message.loading.hide(),Message.popUp.alert["default"]("네일샵 적립금 알림",data.message)})}var Balance=this;getMyRoyaltyPoints(),Balance.getMyRoyaltyPoints=getMyRoyaltyPoints}angular.module("app").controller("BalanceController",BalanceController),BalanceController.$inject=["BalanceService","Message"]}(),function(){"use strict";function BalanceService($http,$q,governorUrl){function getMyRoyaltyPoints(){var deferred=$q.defer();return $http({url:governorUrl+"/royaltyPoint/list/mine",method:"GET",headers:{"Content-Type":"application/json"}}).success(function(data,status,headers,config){deferred.resolve(data)}).error(function(data,status,headers,config){deferred.reject(data)}),deferred.promise}this.getMyRoyaltyPoints=getMyRoyaltyPoints}angular.module("app").service("BalanceService",BalanceService),BalanceService.$inject=["$http","$q","governorUrl"]}(),function(){"use strict";function CancelController(CancelModel,Bookings,Message,$scope,moment,$http,governorUrl){function getMyBookings(){return Bookings.getMyBookings({from:moment().clone().subtract(1,"years").toDate().getTime(),to:moment().clone().add(1,"years").toDate().getTime()}).$promise.then(function(bookingsWrapper){CancelModel.current.bookings=bookingsWrapper.bookings},function(error){Message.popUp.alert["default"]("인터넷이 꺼져있습니다","인터넷을 연결해주세요.")})}function updateStatus(statusString,booking){booking.status=statusString,$http({url:governorUrl+"/booking",method:"PUT",data:booking}).success(function(data){Message.loading.hide(),Message.popUp.alert["default"]("예약취소 알림","예약이 취소 되었습니다.")}).error(function(error){Message.loading.hide()})}function isCanceledOrDone(booking){var bookingTime=new Date(booking.datetime),currentTime=new Date;return currentTime.setHours(0),currentTime>bookingTime?!0:"CANCELED"===booking.status||"DONE"===booking.status?!0:!1}function isDone(booking){return"DONE"===booking.status?"done":"not-done"}function doBeforeEnter(){getMyBookings()}var Cancel=this;Cancel.Model=CancelModel,Cancel.cancelHandler=updateStatus.bind(null,"CANCELED"),Cancel.isCanceledOrDone=isCanceledOrDone,Cancel.isDone=isDone,$scope.$on("$ionicView.beforeEnter",doBeforeEnter)}angular.module("app").controller("CancelController",CancelController),CancelController.$inject=["CancelModel","Bookings","Message","$scope","moment","$http","governorUrl"]}(),function(){"use strict";function CancelModel(){var data={current:{bookings:[{datetime:new Date,products:[{product:{name:"우늘 네일"},amount:1}],place:{name:"place1"},status:"CANCELLED"},{datetime:new Date,products:[{product:{name:"오늘 네일 2"},amount:1}],place:{name:"place2"},status:"PROCESSING"}]}};return data}angular.module("app").factory("CancelModel",CancelModel)}(),function(){"use strict";function DaumMapController(DaumMapModel,$ionicModal,$scope,$state,$stateParams,Dom){function focusInput($stateParams,Dom){"homeInput"===$stateParams.from&&Dom.focusById("daum-map-search-input")}var Map=this;Map.Model=DaumMapModel,Map.searchType="address",Map.findMeThenSearchNearBy=DaumMapModel.findMeThenSearchNearBy,Map.searchLocationNearBy=function(value){return"address"===Map.searchType?DaumMapModel.searchLocationNearBy(value):DaumMapModel.searchPlaceByName(value)},Map.goToDetailHandler=function(){DaumMapModel.modal.hide(),$state.go("main.detail",{id:DaumMapModel.selectedPlace.id})},Map.goToHandler=function(state,params){$state.go(state,params)},Map.selectedPlace=DaumMapModel.selectedPlace,$scope.$on("$ionicView.enter",function(){$ionicModal.fromTemplateUrl("state/daumMap/placeModal.html",{scope:$scope,animation:"slide-in-up"}).then(function(modal){DaumMapModel.modal=modal}),DaumMapModel.domMap.relayout()}),$scope.$on("$ionicView.enter",function(){Map.title="quick"===$stateParams.from?"바로서비스":"전체보기",focusInput($stateParams,Dom)})}angular.module("app").controller("DaumMapController",DaumMapController),DaumMapController.$inject=["DaumMapModel","$ionicModal","$scope","$state","$stateParams","Dom"]}(),function(){"use strict";function daumMap(DaumMapModel,Places,Bookings,$state,$cordovaGeolocation,Message,$q,$stateParams,daum,_,moment){return{scope:{markerSrc:"@",markerClickedSrc:"@",markerWidth:"@",markerHeight:"@"},compile:function(element){function filterPlaces(places,rangeMinutes){var currentMoment=setCurrentMoment(),arrayOfIds=_.pluck(places,"id"),arrayOfPromises=_.map(arrayOfIds,function(id){return Bookings.getBookingsDateBetween({placeId:id,from:currentMoment.clone().set({hour:0,minute:0,second:0}).toDate().getTime(),to:currentMoment.clone().set({hour:23,minute:59,second:59}).toDate().getTime()}).$promise});return $q.all(arrayOfPromises).then(function(arrayOfBookingsWrapper){var availabilities=checkAvailableSlots(places,arrayOfBookingsWrapper,interval,currentMoment,rangeMinutes);if(0===availabilities.length)return[];for(var i=places.length-1;i>=0;i--)"unavailable"===availabilities[i]&&places.splice(i,1);return places},function(arrayOfErrors){})}function setCurrentMoment(){var currentMinute=moment().get("minute"),currentMoment=null;return currentMoment=moment().set(30>=currentMinute?{minutes:29}:{minutes:59})}function checkAvailableSlots(places,arrayOfBookingsWrapper,interval,currentMoment,rangeMinutes){function generateTimeStrings(bookingMoment){var hours=bookingMoment.get("hours"),minutes=bookingMoment.get("minutes"),timeString=String(hours)+":"+String(minutes);return timeString}var todayInt=currentMoment.clone().get("day"),closingMomentsForToday=[];angular.forEach(places,function(place,i){var endHourArray=place.openingHours[todayInt].end.split(":"),hours=endHourArray[0],minutes=endHourArray[1],closingMoment=moment().set({hour:hours,minutes:minutes});place.openingHours[todayInt].start===place.openingHours[todayInt].end?(places.splice(i,1,null),arrayOfBookingsWrapper.splice(i,1,null)):currentMoment.isAfter(closingMoment)?(places.splice(i,1,null),arrayOfBookingsWrapper.splice(i,1,null)):closingMomentsForToday.push(closingMoment)});var i=0;for(i=places.length-1;i>=0;i--)null===places[i]&&(places.splice(i,1),arrayOfBookingsWrapper.splice(i,1));if(0===places.length)return Message.popUp.alert["default"]("바로검색 알림","현재 시각 주변에 운영하는 네일샵들이 없습니다. 내일 이용해주시거나, 다른 지역을 검색해주세요."),[];var arrayOfBookings=_.map(arrayOfBookingsWrapper,function(bookingsWrapper){return bookingsWrapper.bookings}),arrayOfDurations=_.map(arrayOfBookings,function(bookings){return _.map(bookings,function(booking){return booking.products[0].product.duration})}),arrayOfBookingsMoment=[];for(i=0;i<arrayOfDurations.length;i++){for(var resultArray_i=[],bookings=arrayOfBookings[i],durations=arrayOfDurations[i],j=(places[i],0);j<durations.length;j++){var booking=bookings[i],datetime=booking.datetime,bookingMoment=moment(datetime),duration=durations[i],closingMoment=closingMomentsForToday[i];bookingMoment.isBetween(currentMoment.clone(),currentMoment.clone().add(rangeMinutes,"minutes"))&&bookingMoment.isBefore(closingMoment.clone())&&resultArray_i.push(bookingMoment);for(var slotsTaken=Math.ceil(duration/interval),k=0;slotsTaken>k;k++){var minutesToAdd=interval*(k+1),trailingBookingMoment=bookingMoment.clone().add(minutesToAdd,"minutes");trailingBookingMoment.isBetween(currentMoment.clone(),currentMoment.clone().add(rangeMinutes,"minutes"))&&trailingBookingMoment.isBefore(closingMoment.clone())&&resultArray_i.push(trailingBookingMoment)}}arrayOfBookingsMoment.push(resultArray_i)}var arrayOfTimeStrings=[];for(i=0;i<arrayOfBookingsMoment.length;i++){var bookingsMoment=arrayOfBookingsMoment[i],timeStrings=_.map(bookingsMoment,generateTimeStrings);0===timeStrings.length&&(timeStrings=["available"]),arrayOfTimeStrings.push(timeStrings)}var arrayOfGroupedTimeStrings=[];angular.forEach(arrayOfTimeStrings,function(timeStrings){var groupedTimeStrings=_.groupBy(timeStrings,function(timeString){return timeString});arrayOfGroupedTimeStrings.push(groupedTimeStrings)});var availabilities=[];for(i=0;i<arrayOfGroupedTimeStrings.length;i++){var availabilityFlag=!1,place_i=places[i];for(var key in arrayOfGroupedTimeStrings[i])if(arrayOfGroupedTimeStrings[i][key].length<place_i.employee||"available"===key){availabilities.push("available"),availabilityFlag=!0;break}availabilityFlag===!1&&availabilities.push("unavailable")}return availabilities}function processPin(markerImg,markerClickedImg,scope){angular.forEach(DaumMapModel.places,function(place,i){var placeLongitude=place.location.coordinates[0],placeLatitude=place.location.coordinates[1],position=new daum.maps.LatLng(placeLatitude,placeLongitude),marker=new daum.maps.Marker({map:map,position:position,title:String(i),image:markerImg,clickable:!0});daum.maps.event.addListener(marker,"click",function(){var marker=this;scope.$apply(function(){angular.forEach(DaumMapModel.markers,function(otherMarker){otherMarker.setImage(markerImg)}),marker.setImage(markerClickedImg);var index=Number(marker.getTitle());Message.loading["default"](),Places.findById({id:DaumMapModel.places[index].id,populates:"photos"}).$promise.then(function(data){Message.loading.hide(),DaumMapModel.selectedPlace=data,DaumMapModel.modal.show()},function(error){Message.loading.hide(),Message.popUp.alert["default"]()})})}),DaumMapModel.markers.push(marker)})}var interval=30,DOM=element[0],mapOptions={center:new daum.maps.LatLng(37.5,127),level:4,draggable:!0};daum.maps.disableHD();var map=new daum.maps.Map(DOM,mapOptions),ps=new daum.maps.services.Places,filterValue=null,drawMarkers=function(currentCenter,markerImg,markerClickedImg,scope){angular.forEach(DaumMapModel.markers,function(marker){marker.setMap(null)}),DaumMapModel.markers=[],Places.getPlacesWithin({latitude:currentCenter.latitude,longitude:currentCenter.longitude,distance:currentCenter.distance||5e3,limit:currentCenter.limit||50,filter:filterValue||null}).$promise.then(function(placesWrapper){"quick"===$stateParams.from?filterPlaces(placesWrapper.places,60).then(function(places){DaumMapModel.places=places,processPin(markerImg,markerClickedImg,scope)},function(error){}):(DaumMapModel.places=placesWrapper.places,processPin(markerImg,markerClickedImg,scope)),Message.loading.hide(),filterValue=null},function(err){filterValue=null})};return DaumMapModel.findMeThenSearchNearBy=function(){Message.loading["default"](),$cordovaGeolocation.getCurrentPosition({maximumAge:3e3,timeout:5e3}).then(function(position){return null==position.coords?(Message.loading.hide(),Message.popUp.alert["default"]("위치 공유가 꺼져있습니다.","위치 공유를 켜주세요."),!1):(DaumMapModel.currentPosition={latitude:position.coords.latitude,longitude:position.coords.longitude},map.setCenter(new daum.maps.LatLng(DaumMapModel.currentPosition.latitude,DaumMapModel.currentPosition.longitude)),void Message.loading.hide())},function(err){Message.loading.hide(),Message.popUp.alert["default"]("위치 공유가 꺼져있습니다.","위치 공유를 켜주세요.")})},DaumMapModel.searchLocationNearBy=function(value){return Message.loading["default"](),value?void ps.keywordSearch(value,function(status,data){return void 0===data.places[0]?(Message.loading.hide(),Message.popUp.alert["default"]("요청하신 장소가 없습니다","다시검색해주세요"),!1):(map.panTo(new daum.maps.LatLng(data.places[0].latitude,data.places[0].longitude)),void Message.loading.hide())},function(err){Message.loading.hide(),Message.popUp.alert["default"]({title:"위치 공유가 꺼져있습니다.",template:"위치 공유 켜주세요."})}):(Message.loading.hide(),Message.popUp.alert["default"]("검색하기 알림","장소 값을 넣어서 다시 검색해주세요"),!1)},DaumMapModel.searchPlaceByName=function(value){return Message.loading["default"](),value?(filterValue=value,void Places.getPlaces({category:"NAIL-PLACE",filter:value,limit:50}).$promise.then(function(placesWrapper){return placesWrapper.places&&placesWrapper.places.length>0?(map.panTo(new daum.maps.LatLng(placesWrapper.places[0].location.coordinates[1],placesWrapper.places[0].location.coordinates[0])),void Message.loading.hide()):(Message.loading.hide(),Message.popUp.alert["default"]("요청하신 장소가 없습니다","다시검색해주세요"),!1)},function(err){})):(Message.loading.hide(),Message.popUp.alert["default"]("검색하기 알림","장소 값을 넣어서 다시 검색해주세요"),!1)},function(scope){var markerSize=new daum.maps.Size(Number(scope.markerWidth),Number(scope.markerHeight)),markerImg=new daum.maps.MarkerImage(scope.markerSrc,markerSize),markerClickedImg=new daum.maps.MarkerImage(scope.markerClickedSrc,markerSize);map.relayout(),DaumMapModel.domMap=map,daum.maps.event.addListener(map,"idle",function(){Message.loading["default"]();var currentCenter={longitude:map.getCenter().getLng(),latitude:map.getCenter().getLat()};angular.extend(currentCenter,{distance:2e3,limit:20}),drawMarkers(currentCenter,markerImg,markerClickedImg,scope)})}}}}angular.module("app").directive("daumMap",daumMap),daumMap.$inject=["DaumMapModel","Places","Bookings","$state","$cordovaGeolocation","Message","$q","$stateParams","daum","_","moment"]}(),function(){"use strict";function DaumMapModel(){var model={category:"NAIL-PLACE",currentPosition:{latitude:"FLOAT",longitude:"FLOAT"},markers:[],places:[],selectedPlace:{},modal:{},findMeThenSearchNearBy:function(){},searchLocationNearBy:function(){}};return model}angular.module("app").factory("DaumMapModel",DaumMapModel)}(),function(){"use strict";function DetailController(DetailModel,$stateParams,$scope,Message,Places,$window,$ionicSlideBoxDelegate,$state,Favorite,$filter,moment){function callPhone(){$window.location.href="tel:"+DetailModel.current.phone}function loadPlace(){return Message.loading["default"](),Places.findById({id:$stateParams.id,populates:"photos,products,bookings"}).$promise.then(function(place){DetailModel.current=place,Detail.interiorPhotos=filterByTag(DetailModel.current.photos,"INTERIOR"),Message.loading.hide(),$ionicSlideBoxDelegate.update()},function(err){Message.popUp.alert["default"]("네일샵정보 알림","요청하신 네일샵은 더이상 존재하지 않습니다.")})}function loadPortfolioPhotos(){return Places.getPlacePhotos({id:$stateParams.id,tags:"PORTFOLIO"}).$promise.then(function(photos){Detail.portFolioPhotos=photos},function(error){})}function doBeforeEnter(){loadPlace(),loadPortfolioPhotos()}function disablePast(date){var currentDate=moment();return currentDate>date}var filterByTag=$filter("filterByTag"),Detail=this;Detail.Model=DetailModel,Detail.date=moment(),Detail.isFavorite=Favorite.isFavorite.bind(null,"NAIL_SAVED_PLACES"),Detail.interiorPhotos=[],Detail.portFolioPhotos=[],Detail.toggleSavePlace=Favorite.saveToFavorite.bind(null,"NAIL_SAVED_PLACES",Detail,DetailModel),Detail.disablePast=disablePast,Detail.callPhone=callPhone,$scope.$on("$ionicView.beforeEnter",doBeforeEnter)}angular.module("app").controller("DetailController",DetailController),DetailController.$inject=["DetailModel","$stateParams","$scope","Message","Places","$window","$ionicSlideBoxDelegate","$state","Favorite","$filter","moment"];

}(),function(){"use strict";function DetailModel($q,$state,$stateParams,moment,Message){var model={current:{openingHours:[{start:"00:00",end:"00:00"},{start:"07:00",end:"20:00"},{start:"07:00",end:"20:00"},{start:"07:00",end:"20:00"},{start:"07:00",end:"20:00"},{start:"09:00",end:"22:00"},{start:"09:00",end:"22:00"}]},selectedDate:{current:"BOOL",customClass:"STRING",date:"DATE",disabled:"BOOL"},dayClickHandler:function(dt){if(!this.current.products||0==this.current.products.length)return Message.loading.hide(),void Message.popUp.alert["default"]("예약 불가 안내","현재 예약시스템을 준비 중인 샵입니다.").then(function(response){});var currentDate=new moment;if(currentDate.hour(0),!(currentDate>dt.date)){var shopId=$stateParams.id,selectedDate=moment(dt.date);$state.go("main.schedule",{id:shopId,selectedDate:selectedDate.format("YYYY-MM-DD")})}}};return model}angular.module("app").factory("DetailModel",DetailModel),DetailModel.$inject=["$q","$state","$stateParams","moment","Message"]}(),function(){"use strict";function LoginController(LoginModel,AuthService,Message,$state){function loginWithFacebook(){return AuthService.loginWithFacebook().then(function(data){Message.loading.hide(),$state.go("main.home")},function(error){})}function loginWithKaKaoTalk(){return AuthService.loginWithKakao().then(function(data){Message.loading.hide(),$state.go("main.home")},function(error){})}var Login=this;Login.Model=LoginModel,Login.loginWithFaceBook=loginWithFacebook,Login.loginWithKaKaoTalk=loginWithKaKaoTalk}angular.module("app").controller("LoginController",LoginController),LoginController.$inject=["LoginModel","AuthService","Message","$state"]}(),function(){"use strict";function LoginModel(){var model={};return model}angular.module("app").factory("LoginModel",LoginModel)}(),function(){"use strict";function FavoriteController(FavoriteModel,$scope,$state,localStorage){function goToDetailHandler(place){$state.go("main.detail",{id:place.id})}function doBeforeEnter(){FavoriteModel.placeList=angular.fromJson(localStorage.getItem("NAIL_SAVED_PLACES"))}var Favorite=this;Favorite.Model=FavoriteModel,Favorite.goToDetailHandler=goToDetailHandler,$scope.$on("$ionicView.beforeEnter",doBeforeEnter)}angular.module("app").controller("FavoriteController",FavoriteController),FavoriteController.$inject=["FavoriteModel","$scope","$state","localStorage"]}(),function(){"use strict";function FavoriteModel(){var model={};return model}angular.module("app").factory("FavoriteModel",FavoriteModel)}(),function(){"use strict";function MainController($ionicSideMenuDelegate,MainModel,$state,$timeout,$ionicNavBarDelegate,$ionicHistory,localStorage,$scope,appName,Devices,PushService,$rootScope,$cordovaSocialSharing){function toggleSideMenu(){$ionicSideMenuDelegate.toggleLeft()}function menuSelectHandler(item){MainModel.currentItem=item,$state.go(item.state),$ionicSideMenuDelegate.toggleLeft(!1)}function getCurrentState(){return $ionicHistory.currentStateName()}function toggleAccordion(){Main.settingSubMenu=!Main.settingSubMenu}function togglePushHandler(){MainModel.setting.pushNotification=MainModel.setting.pushNotification===!0?!1:!0,PushService.updateDeviceToken(MainModel.setting.pushNotification)}function goToDaumMapHandler(){$state.go("main.daumMap")}function doBeforeEnter(){var userWrapper=angular.fromJson(localStorage.getItem(appName+"_auth_token"));angular.copy(userWrapper.user,MainModel.user)}function displayUserName(){var displayName="User"+MainModel.user.username;return MainModel.user.nickname&&(displayName=MainModel.user.nickname),displayName}function socialShare(){$cordovaSocialSharing.share("오늘 내일 걱정말고 오늘 Nail","지금바로 네일샵을 찾아보세요!",null,"http://www.naver.com").then(function(suc){},function(err){})}var Main=this;Main.Model=MainModel,Main.toggleSideMenu=toggleSideMenu,Main.menuSelectHandler=menuSelectHandler,Main.getCurrentState=getCurrentState,Main.toggleAccordion=toggleAccordion,Main.togglePushHandler=togglePushHandler,Main.goToDaumMapHandler=goToDaumMapHandler,Main.displayUserName=displayUserName,Main.socialShare=socialShare,$rootScope.user=MainModel.user,$scope.$on("$ionicView.beforeEnter",doBeforeEnter)}angular.module("app").controller("MainController",MainController),MainController.$inject=["$ionicSideMenuDelegate","MainModel","$state","$timeout","$ionicNavBarDelegate","$ionicHistory","localStorage","$scope","appName","Devices","PushService","$rootScope","$cordovaSocialSharing"]}(),function(){"use strict";function MainModel(){var model={user:{id:"test55cc92edc96284828b826258",username:"test49720641",nickname:"test",profile_image:"http://mud-kage.kakao.co.kr/14/dn/btqcfpt4vNR/Fmmz6xsVRH05wv1UYNniRK/o.jpg",thumbnail_image:"http://mud-kage.kakao.co.kr/14/dn/btqcfp1VCch/LjjO9lFj9uwxpOB59NHEnK/o.jpg"},sideMenuLists:[{state:"main.home",text:"홈으로 가기"},{state:"main.show.savedList",text:"마이갤러리"},{state:"main.balance.list",text:"적립금 확인"},{state:"main.cancel",text:"예약 취소"},{state:"main.announcements.eventList",text:"이벤트 / 공지사항"}],currentItem:{state:"main.home",text:"홈으로 가기"},setting:{pushNotification:!0}};return model}angular.module("app").factory("MainModel",MainModel)}(),function(){"use strict";function MainHomeController(MainHomeModel,$state){function goToHandler(state,params){$state.go(state,params)}function searchHandler(search){$state.go("main.daumMap",{from:"homeInput"})}var Home=this;Home.search="",Home.goToHandler=goToHandler,Home.searchHandler=searchHandler}angular.module("app").controller("MainHomeController",MainHomeController),MainHomeController.$inject=["MainHomeModel","$state"]}(),function(){"use strict";function MainHomeModel(){var model={};return model}angular.module("app").factory("MainHomeModel",MainHomeModel)}(),function(){"use strict";function ScheduleController(DetailModel,ScheduleModel,Places,Bookings,Message,$scope,$ionicModal,$q,$stateParams,$http,governorUrl,moment,_){function selectSlotHandler(reserveSlot,index){return ScheduleModel.selectedSlot=reserveSlot,ScheduleModel.selectedIndex=index,reserveSlot.bookingCount>=DetailModel.current.employee?(Message.popUp.alert["default"]("예약불가 알림","예약이 꽉 차있는 시간입니다."),!1):(Schedule.modal.show(),void(ScheduleModel.form.datetime=reserveSlot.toDate()))}function isSelectedSlot(reserveSlot){var selectedHourString=ScheduleModel.selectedSlot.get&&ScheduleModel.selectedSlot.get("hour"),selectedMinuteString=ScheduleModel.selectedSlot.get&&ScheduleModel.selectedSlot.get("minute"),selectedTimeString=selectedHourString+":"+selectedMinuteString,reserveSlotHourString=reserveSlot.get&&reserveSlot.get("hour"),reserveSlotMinuteString=reserveSlot.get&&reserveSlot.get("minute"),reserveSlotTimeString=reserveSlotHourString+":"+reserveSlotMinuteString;return selectedTimeString===reserveSlotTimeString}function isAvailableSlot(reserveSlot){return reserveSlot.isBefore(moment())?!1:null!=reserveSlot.bookingCount&&null!=DetailModel.current.employee?Number(DetailModel.current.employee)>reserveSlot.bookingCount:!0}function selectProductHandler(product){ScheduleModel.form.products=[{product:product}]}function isSelectedProduct(product){return(ScheduleModel.form.products&&ScheduleModel.form.products[0]&&ScheduleModel.form.products[0].product.id)===product.id}function closeModalHandler(){Bookings.getBookingsDateBetween({placeId:$stateParams.id,from:moment($stateParams.selectedDate).clone().toDate().getTime(),to:moment($stateParams.selectedDate).clone().add(1,"days").toDate().getTime()}).$promise.then(function(data){ScheduleModel.viewSlots=generateReserveMomentSlots($stateParams.selectedDate,DetailModel.current.openingHours,30,!1),updateSlotsWithBookings(data),angular.copy({},ScheduleModel.form),Schedule.modal.hide()})}function bookingHandler(){return ScheduleModel.form.place=$stateParams.id,ScheduleModel.form.category="NAIL-BOOKING",ScheduleModel.form.products&&0!==ScheduleModel.form.products.length?null==ScheduleModel.form.products[0]?reserveErrorHelper("서비스란"):null==ScheduleModel.form.userKoreanName?reserveErrorHelper("이름란"):null==ScheduleModel.form.userPhoneNumber?reserveErrorHelper("연락처란"):(Message.loading["default"](),void Bookings.getBookingsDateBetween({placeId:$stateParams.id,from:moment($stateParams.selectedDate).clone().toDate().getTime(),to:moment($stateParams.selectedDate).clone().add(1,"days").toDate().getTime()}).$promise.then(function(data){ScheduleModel.viewSlots=generateReserveMomentSlots($stateParams.selectedDate,DetailModel.current.openingHours,30,!1),updateSlotsWithBookings(data);var selectedSlotIsBookable=isSelectedSlotBookable();selectedSlotIsBookable&&makeBooking()},function(error){})):(Message.loading.hide(),void Message.popUp.alert["default"]("예약 불가 안내","서비스를 선택해주세요.").then(function(response){}))}function doBeforeEnter(){var openingHours=DetailModel.current.openingHours;ScheduleModel.viewSlots=generateReserveMomentSlots($stateParams.selectedDate,openingHours,30,!1),Bookings.getBookingsDateBetween({placeId:$stateParams.id,from:moment($stateParams.selectedDate).clone().toDate().getTime(),to:moment($stateParams.selectedDate).clone().add(1,"days").toDate().getTime()}).$promise.then(function(bookingsWrapper){updateSlotsWithBookings(bookingsWrapper)},function(error){})}function generateReserveMomentSlots(selectedDateString,openingHoursArray,interval,ableToBookAtEndTimeBool){var reserveMoment=moment(selectedDateString).set({hour:0,minute:0,second:0}),dayOfWeek=reserveMoment.day(),hoursObj=openingHoursArray[dayOfWeek],startTimeArray=hoursObj.start.split(":"),endTimeArray=hoursObj.end.split(":"),startHour=startTimeArray[0],startMinute=startTimeArray[1],endHour=endTimeArray[0],endMinute=endTimeArray[1],startInMinutes=60*Number(startHour)+Number(startMinute),endInMinutes=ableToBookAtEndTimeBool?60*Number(endHour)+Number(endMinute)+interval:60*Number(endHour)+Number(endMinute),arrayOfSlotsInMinutes=_.range(startInMinutes,endInMinutes,interval),arrayOfSlotsInMoment=[];return angular.forEach(arrayOfSlotsInMinutes,function(minutes){var reserveMomentCopy=reserveMoment.clone(),slot=reserveMomentCopy.set({minute:minutes,second:0});arrayOfSlotsInMoment.push(slot)}),arrayOfSlotsInMoment}function updateSlotsWithBookings(bookingsWrapper){var viewSlots=ScheduleModel.viewSlots,bookings=ScheduleModel.bookings=bookingsWrapper.bookings;angular.forEach(bookings,function(booking){for(var begBookingMoment=moment.utc(booking.datetime).local().add(1,"seconds"),duration=booking.products[0].product&&booking.products[0].product.duration,viewSlotEnd="",i=0;i<viewSlots.length;i++)if(i<viewSlots.length-1?viewSlotEnd=viewSlots[i+1]:i===viewSlots.length-1&&(viewSlotEnd=viewSlots[i].clone().add(interval,"minutes")),begBookingMoment.isBetween(viewSlots[i],viewSlotEnd)&&"CANCELED"!==booking.status){for(var numberOfSlotsTaken=Math.ceil(Number(duration)/Number(interval)),j=0;numberOfSlotsTaken>j;j++)viewSlots[i+j].bookingCount?viewSlots[i+j].bookingCount+=1:viewSlots[i+j].bookingCount=1;break}})}function doAfterEnter(){$ionicModal.fromTemplateUrl("state/schedule/reserveModal.html",{scope:$scope,animation:"slide-in-up"}).then(function(modal){Schedule.modal=modal})}function isSelectedSlotBookable(){var index=ScheduleModel.selectedIndex;if(!ScheduleModel.form.products[0].product)return Message.loading.hide(),Message.popUp.alert["default"]("예약 불가 안내","현재 예약시스템을 준비 중인 샵입니다.").then(function(response){Schedule.closeModalHandler()}),!1;for(var duration=ScheduleModel.form.products[0].product.duration,numberOfSlots=Math.ceil(duration/interval),i=index;index+numberOfSlots>i;i++){var bookingCounts=ScheduleModel.viewSlots[i].bookingCount?ScheduleModel.viewSlots[i].bookingCount:0;if(bookingCounts>=Number(DetailModel.current.employee))return Message.loading.hide(),Message.popUp.alert["default"]("예약 불가 안내","고르신 서비스의 시간이 다음 예약시간과 겹치게 되어 예약이 불가합니다."),!1;if(index+numberOfSlots>ScheduleModel.viewSlots.length)return Message.loading.hide(),Message.popUp.alert["default"]("예약 불가 안내","고르신 서비스의 마무리시간이 영업 종료시간을 넘기어 예약이 불가합니다."),!1}return!0}function makeBooking(){return Array.isArray(Schedule.Model.form.products)&&0!==Schedule.Model.form.products.length?Bookings.requestBooking({},Schedule.Model.form).$promise.then(function(data){Message.loading.hide(),Message.popUp.alert["default"]("예약 완료 알림","예약이 완료 되었습니다.").then(function(response){Schedule.closeModalHandler()})},function(error){Message.loading.hide()}):(Message.loading.hide(),void Message.popUp.alert["default"]("부킹가능한 상품이 없습니다.","부킹가능한 상품을 준비 중입니다.").then(function(response){Schedule.closeModalHandler()}))}function reserveErrorHelper(korean){Message.popUp.alert["default"](korean+"이 비었습니다.",korean+"을 입력/골라 주세요.")}var interval=30,Schedule=this;Schedule.Model=ScheduleModel,ScheduleModel.current=DetailModel.current,Schedule.selectSlotHandler=selectSlotHandler,Schedule.isSelectedSlot=isSelectedSlot,Schedule.isAvailableSlot=isAvailableSlot,Schedule.selectProductHandler=selectProductHandler,Schedule.isSelectedProduct=isSelectedProduct,Schedule.closeModalHandler=closeModalHandler,Schedule.bookingHandler=bookingHandler,$scope.$on("$ionicView.beforeEnter",doBeforeEnter),$scope.$on("$ionicView.afterEnter",doAfterEnter)}angular.module("app").controller("ScheduleController",ScheduleController),ScheduleController.$inject=["DetailModel","ScheduleModel","Places","Bookings","Message","$scope","$ionicModal","$q","$stateParams","$http","governorUrl","moment","_"]}(),function(){"use strict";function ScheduleModel(){var model={current:{openingHours:[{start:"00:00",end:"00:00"},{start:"07:00",end:"20:00"},{start:"07:00",end:"20:00"},{start:"07:00",end:"20:00"},{start:"07:00",end:"20:00"},{start:"09:00",end:"22:00"},{start:"09:00",end:"22:00"}]},selectedSlot:{},viewSlots:["moment","moment","moment"],bookings:[{datetime:"datetime",products:[{duration:"30"}]}],form:{products:[],userKoreanName:null,userPhoneNumber:null,datetime:new Date,place:"placeId",category:"NAIL-BOOKING"}};return model}angular.module("app").factory("ScheduleModel",ScheduleModel)}(),function(){"use strict";function ShowController(ShowModel,Posts,$state,$ionicModal,$scope,ShowListModel,$cordovaCamera,Message,$timeout,$window,$cordovaFile){function getNewerPosts(){var currentPosts=ShowListModel.postsWrapper.posts;Posts.getPosts({category:"SHOW-POST",limit:10,newerThan:currentPosts[0]&&currentPosts[0].id,populates:"photos,createdBy"}).$promise.then(function(postWrapper){postWrapper.posts.forEach(function(post){currentPosts.unshift(post)})},function(error){Message.popUp.alert["default"]()})}var Show=this;$ionicModal.fromTemplateUrl("state/show/showModal.html",{scope:$scope,animation:"slide-in-up"}).then(function(modal){Show.modal=modal}),Show.modalHideHandler=function(){Show.writeImageSrc=null,Show.writeTitle=null,Show.writeContent=null,Show.modal.hide()},Show.modalShowHandler=function(){Show.modal.show()},Show.goToSavedPostListHandler=function(){$state.go("main.show.savedList")},Show.showWriteImage=function(){return null!=Show.writeImageSrc},Show.getPictureHandler=function(sourceType){void 0===sourceType&&(sourceType=1);var options={allowEdit:!0,quality:50,destinationType:Camera.DestinationType.FILE_URI,encodingType:Camera.EncodingType.JPEG,correctOrientation:!0,targetWidth:500,mediaType:Camera.MediaType.PICTURE,cameraDirection:Camera.Direction.BACK,sourceType:sourceType};$cordovaCamera.getPicture(options).then(function(imageUrl){Show.writeImageFile=imageUrl;var name=imageUrl.substr(imageUrl.lastIndexOf("/")+1),namePath=imageUrl.substr(0,imageUrl.lastIndexOf("/")+1);$cordovaFile.readAsDataURL(namePath,name).then(function(dataUri){Show.writeImageSrc=dataUri},function(error){})},function(err){})},Show.postHandler=function(){Message.loading["default"]();var postWithFile={category:"SHOW-POST",title:Show.writeTitle,content:Show.writeContent,file:Show.writeImageFile};Posts.createPostWithImage({},postWithFile).$promise.then(function(){Show.writeTitle="",Show.writeContent="",Show.writeImageSrc=null,Show.writeImageFile="",getNewerPosts(),Message.loading.hide(),Message.message.success("포스트가 만들어졌습니다."),Show.modal.hide()},function(error){Message.loading.hide(),Message.message.error("다시 시도해주세요.")},function(prog){})}}angular.module("app").controller("ShowController",ShowController),ShowController.$inject=["ShowModel","Posts","$state","$ionicModal","$scope","ShowListModel","$cordovaCamera","Message","$timeout","$window","$cordovaFile"]}(),function(){"use strict";function ShowModel(){var model={};return model}angular.module("app").factory("ShowModel",ShowModel)}();